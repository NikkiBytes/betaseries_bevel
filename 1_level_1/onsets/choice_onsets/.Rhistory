library(ggplot2)
library(ggplot2)
library(ggpubr)
library(plyr)
library(tidyverse)
library(reshape)
library(data.table)
readdata <- function(fn){
dt_temp <- fread(fn, sep="\t")
return(dt_temp)
}
all.files <- list.files(path = "~/Documents/bevel_choice/by_participant_txtfiles/",pattern = ".txt", full.names = TRUE)
mylist <- lapply(all.files, readdata)
mydata <- rbindlist(mylist, use.names=FALSE)
names(mydata)<-c("sub_num","run","type","choice","side","outcome","congruent","RT")
mydata$side<-as.factor(mydata$side)
mydata$side<-revalue(mydata$side, c("1"="left", "2"="right"))
mydata <- mydata %>%
group_by(.dots=c("sub_num")) %>%
dplyr::mutate(Count=row_number())
mydata$outcome0[mydata$outcome == "Miss"] <- 0
mydata$outcome0[mydata$outcome == "punish"] <- -10
mydata$outcome0[mydata$outcome == "reward"] <- 10
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) ,fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+
scale_x_continuous(name="Trial Number") +
scale_y_continuous(name="Participant ID") +
labs(colour = "Outcome")
#geom_point(aes(shape=as.factor(choice), size=1, color=as.factor(choice)))
hmTOTAL
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) ,fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+
xlab(label = "Trial")
hmTOTAL
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) ,fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')
hmTOTAL
hmTOTALbad_flip<-ggplot(subset(data0, learn == "didn't learn"),aes(as.numeric(Count), as.factor(sub_num) ,fill=choice0))+
geom_tile()+
scale_fill_gradient2(low="pink", high="blue", na.value="black", name="") +
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number') +
guide_colorbar(title = "Choice")
data0$choice0[data0$choice == "Miss"] <- 0
library(ggplot2)
library(ggpubr)
library(plyr)
library(tidyverse)
library(reshape)
library(data.table)
readdata <- function(fn){
dt_temp <- fread(fn, sep="\t")
return(dt_temp)
}
all.files <- list.files(path = "~/Documents/bevel_choice/by_participant_txtfiles/",pattern = ".txt", full.names = TRUE)
mylist <- lapply(all.files, readdata)
mydata <- rbindlist(mylist, use.names=FALSE)
names(mydata)<-c("sub_num","run","type","choice","side","outcome","congruent","RT")
mydata$side<-as.factor(mydata$side)
mydata$side<-revalue(mydata$side, c("1"="left", "2"="right"))
mydata <- mydata %>%
group_by(.dots=c("sub_num")) %>%
dplyr::mutate(Count=row_number())
mydata$outcome0[mydata$outcome == "Miss"] <- 0
mydata$outcome0[mydata$outcome == "punish"] <- -10
mydata$outcome0[mydata$outcome == "reward"] <- 10
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')
#geom_point(aes(shape=as.factor(choice), size=1, color=as.factor(choice)))
hmTOTAL
mydata$outcome0[mydata$outcome == "Miss"] <- 0
mydata$outcome0[mydata$outcome == "punish"] <- -10
mydata$outcome0[mydata$outcome == "reward"] <- 10
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guide_colorbar(title = "Outcome")
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guides(fill=guide_legend(title='Outcome'))
hmTOTAL
mydata$outcome0[mydata$outcome == "Miss"] <- 0
mydata$outcome0[mydata$outcome == "punish"] <- -10
mydata$outcome0[mydata$outcome == "reward"] <- 10
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guides(fill=guide_legend(title='Outcome'), labels=c("Punish", "Miss", "Reward")
#geom_point(aes(shape=as.factor(choice), size=1, color=as.factor(choice)))
hmTOTAL
mydata$outcome0[mydata$outcome == "Miss"] <- 0
mydata$outcome0[mydata$outcome == "punish"] <- -10
mydata$outcome0[mydata$outcome == "reward"] <- 10
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guides(fill=guide_legend(title='Outcome'), labels=c("Punish", "Miss", "Reward"))
#geom_point(aes(shape=as.factor(choice), size=1, color=as.factor(choice)))
hmTOTAL
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guides(fill=guide_legend(title='Outcome'),
breaks=c("-10", "0", "10"), labels=c("Punish", "Miss", "Reward"))
hmTOTAL
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guides(fill=guide_legend(title='Outcome')) +
geom_point(aes(shape=as.factor(choice), size=1, color=as.factor(choice)))
hmTOTAL
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guides(fill=guide_legend(title='Outcome')) +
geom_point(aes(shape=as.factor(choice), size=1, color=as.factor(choice)))
hmTOTAL
hmTOTAL<-ggplot(mydata,aes(as.numeric(Count), as.factor(sub_num) , fill=outcome0))+
geom_tile()+
scale_fill_gradient2(low="red", high="green", na.value="black", name="")+
theme_classic()+ xlab(label = "Trial") + ylab(label= 'Subject Number')+
guides(fill=guide_legend(title='Outcome')) +
geom_point(aes(shape=as.factor(choice), size=.7, color=as.factor(choice)))
hmTOTAL
hmTOTAL
test<-ggarrange(hmTOTALgood,hmTOTALbad,
labels = c("Learned", "Did Not Learn"), label.y = 5
ncol = 1, nrow = 2)
summary(data0$sensitivity_reward)
data0$learn[data0$sensitivity_reward < 0.444]<- "didn't learn"
all_plot<-ggarrange(plot1, plot2, plot3,
labels = c("80/20 pair", "70/30 pair", "60/40 pair"),
ncol = 3, nrow = 1)
all_plot<-ggarrange(plot1, plot2, plot3,
labels = c("80/20 pair", "70/30 pair", "60/40 pair"),
ncol = 3, nrow = 1)
all_plot
all_plot<-ggarrange(plot1, plot2, plot3,
labels = c("80/20 pair", "70/30 pair", "60/40 pair"),
ncol = 3, nrow = 1)
all_plot
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.delim("all_subjects.txt")
names(data) <- c("subj", "run", "pair", "choice", "outcome", "congruent", "RT")
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.delim("all_subjects.txt")
names(data) <- c("subj", "run", "pair", "choice", "outcome", "congruent", "RT")
View(data)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.delim("~/Documents/bevel_choice/all_subjects.txt")
names(data) <- c("subj", "run", "pair", "choice", "outcome", "congruent", "RT")
View(data)
data <- data %>%
group_by(.dots=c("subj")) %>%
mutate(Count=row_number())
percent_matched <- function(n) {
count <- sum(data$Count == n & data$congruent=="congruent")
countall <- sum(data$Count == n)
return(count/countall)
}
percent_matched <- function(n) {
count <- sum(data$subj == n & data$congruent=="congruent")
countall <- sum(data$subj == n)
return(count/countall)
}
percent_matched(5)
percent_matched(6)
percent_matched <- function(n) {
count <- sum(data$subj == n & data$congruent=="congruent")
countall <- sum(data$congruent=="congruent" | data$congruent=="incongruent")
return(count/countall)
}
percent_matched(6)
percent_matched <- function(n) {
count <- sum(data$subj == n & data$congruent=="congruent")
countall <- sum(data$subj = n & !data$congruent=="Miss")
return(count/countall)
}
percent_matched(6)
percent_matched <- function(n) {
count <- sum(data$subj == n & data$congruent=="congruent")
countall <- sum(data$subj == n & !data$congruent=="Miss")
return(count/countall)
}
percent_matched(6)
percent_matched(1)
x <- 1:90
output <- lapply(x, percent_matched)
df <- data.frame(matrix(unlist(output), nrow=length(output), byrow=T))
colnames(df)[colnames(df)=="matrix.unlist.output...nrow...length.output...byrow...T."] <- "percent_mismatched"
View(df)
df$subj <- row.names()
df$subj <- row.names(df)
View(df)
summary(df$percent_mismatched)
write.table(df, file = "~/Documents/bevel_choice/all_subjects/proportion_congruent.txt", sep = "\t",
row.names = F, col.names = TRUE)
write.csv(df, file = "~/Documents/bevel_choice/my_data.csv")
summary(df$percent_matched)
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.delim("~/Documents/bevel_choice/all_subjects.txt")
names(data) <- c("subj", "run", "pair", "choice", "outcome", "congruent", "RT")
data <- data %>%
group_by(.dots=c("subj")) %>%
mutate(Count=row_number())
percent_matched <- function(n) {
count <- sum(data$subj == n & data$congruent=="congruent")
countall <- sum(data$subj == n & !data$congruent=="Miss")
return(count/countall)
}
percent_matched(1)
x <- 1:90
output <- lapply(x, percent_matched)
df <- data.frame(matrix(unlist(output), nrow=length(output), byrow=T))
colnames(df)[colnames(df)=="matrix.unlist.output...nrow...length.output...byrow...T."] <- "percent_matched"
summary(df$percent_matched)
write.csv(df, file = "~/Documents/bevel_choice/percent_matched.csv")
#install.packages("nFactors")
library(nFactors)
#loading in data csv with all variables of interest
#data.all <- read.table("~/Documents/milkfadata031519.csv", sep=",", header = T)
data.all <- read.table("~/Google Drive/NIBL/Projects/factor_analysis/Data/milkfadata031519.csv", sep=",", header = T)
#double-checking all variables show up (and all data associated)
names(data.all)
head(data.all)
#separating out dependent variables for factor analysis:
#assign those to dep.vars, then create data.dep to have the dep.vars only from data.all
dep.vars <- c("rmr","teei","basdrive","basfun","basreward","bis","eetotal","restotal","tfeqf1",
"tfeqf2","tfeqf3","bffq_totalcal","bffq_.fat","bffq_.sug","cravehifat","craveswt","cravestrch",
"cravefast","likehifat","likeswt","likestrch","likefast","rscd","rswf","hungrydiff","fulldiff",
"foodreinforcement","pleasantdiff","ediblediff","wantdiff","familiardiff","intensitydiff")
data.dep <- data.all[dep.vars]
summary(data.dep)
#removing NA values so that following analysis will work
data.dep=data.dep[complete.cases(data.dep),]
#determining # of factors to extract by getting eigenvalues & making a Scree plot
ev <- eigen(cor(data.dep))
ap <- parallel(subject=nrow(data.dep), var=ncol(data.dep),
rep=100, cent=.05)
nS <- nScree(x=ev$values, aparallel = ap$eigen$qevpa)
plotnScree(nS)
#loading in data csv with all variables of interest
#data.all <- read.table("~/Documents/milkfadata031519.csv", sep=",", header = T)
data.all <- read.table("~/Google Drive/NIBL/Projects/factor_analysis/Data/milkfadata031519.csv", sep=",", header = T)
#double-checking all variables show up (and all data associated)
names(data.all)
head(data.all)
View(data.all)
print(data.fa,digits=2,cutoff=.3,sort=TRUE)
#factor analysis using Parallel Analysis (n=11) from the Scree plot
data.fa <- factanal(data.dep, factors=11, rotation="varimax")
#separating out dependent variables for factor analysis:
#assign those to dep.vars, then create data.dep to have the dep.vars only from data.all
dep.vars <- c("rmr","teei","basdrive","basfun","basreward","bis","eetotal","restotal","tfeqf1",
"tfeqf2","tfeqf3","bffq_totalcal","bffq_.fat","bffq_.sug","cravehifat","craveswt","cravestrch",
"cravefast","likehifat","likeswt","likestrch","likefast","rscd","rswf","hungrydiff","fulldiff",
"foodreinforcement","pleasantdiff","ediblediff","wantdiff","familiardiff","intensitydiff")
data.dep <- data.all[dep.vars]
summary(data.dep)
#removing NA values so that following analysis will work
data.dep=data.dep[complete.cases(data.dep),]
#determining # of factors to extract by getting eigenvalues & making a Scree plot
ev <- eigen(cor(data.dep))
ap <- parallel(subject=nrow(data.dep), var=ncol(data.dep),
rep=100, cent=.05)
nS <- nScree(x=ev$values, aparallel = ap$eigen$qevpa)
plotnScree(nS)
#factor analysis using Parallel Analysis (n=11) from the Scree plot
data.fa <- factanal(data.dep, factors=11, rotation="varimax")
print(data.fa,digits=2,cutoff=.3,sort=TRUE)
#factor analysis using Parallel Analysis (n=11) from the Scree plot
data.fa <- factanal(data.dep, factors=10, rotation="varimax")
print(data.fa,digits=2,cutoff=.3,sort=TRUE)
#factor analysis using Parallel Analysis (n=11) from the Scree plot
data.fa <- factanal(data.dep, factors=11, rotation="varimax")
print(data.fa,digits=2,cutoff=.3,sort=TRUE)
library(tidyselect)
######## TEST LOOP ################
splitfunc <- function(name){
data <- read.delim(name, header = FALSE, sep = "\t", dec = ".")
for (i in 1:nrow(data)) {
a <- as.data.frame(data[i,], drop=false)
b <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write.table(a, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(b, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
}
setwd("/Users/jennygilbert/Documents/betaseries_bevel/onsets/rinse_onsets")
######## TEST LOOP ################
splitfunc <- function(name){
data <- read.delim(name, header = FALSE, sep = "\t", dec = ".")
for (i in 1:nrow(data)) {
a <- as.data.frame(data[i,], drop=false)
b <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write.table(a, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(b, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
}
######## TEST GETTING FILENAMES ################
mypath <- '/Users/jennygilbert/Documents/betaseries_bevel/onsets/rinse_onsets'
filelist <- list.files(mypath, all.files = TRUE)
######## TEST GETTING FILENAMES ################
mypath <- '/Users/jennygilbert/Documents/betaseries_bevel/onsets/rinse_onsets/'
filelist <- list.files(mypath, all.files = TRUE)
library(tidyselect)
setwd("/Users/jennygilbert/Documents/betaseries_bevel/onsets/rinse_onsets")
setwd("/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets/rinse_onsets")
######## TEST ################
#Read data into R.
data <- read.delim('bevel30_run03.txt', header = FALSE, sep = "\t", dec = ".")
######## TEST ################
#Read data into R.
data <- read.delim('bevel30_run03_rinse.txt', header = FALSE, sep = "\t", dec = ".")
view(data)
######## TEST LOOP ################
splitfunc <- function(name){
data <- read.delim(name, header = FALSE, sep = "\t", dec = ".")
for (i in 1:nrow(data)) {
a <- as.data.frame(data[i,], drop=false)
b <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write.table(a, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(b, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
}
######## TEST GETTING FILENAMES ################
mypath <- '/Users/jennygilbert/Documents/betaseries_bevel/onsets/rinse_onsets/'
######## TEST GETTING FILENAMES ################
mypath <- '/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets/rinse_onsets/'
filelist <- list.files(mypath, all.files = TRUE)
subrun <- file_path_sans_ext(basename(filelist))
lapply(filelist[1:358], splitfunc)
splitfunc('bevel30_run03_rinse.txt')
######## TEST LOOP ################
splitfunc <- function(name){
data <- read.delim(name, header = FALSE, sep = "\t", dec = ".")
for (i in 1:nrow(data)) {
a <- as.data.frame(data[i,], drop=false)
b <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "nuis",i,".txt"))
write.table(a, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(b, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
}
splitfunc('bevel30_run03_rinse.txt')
######## TEST LOOP ################
splitfunc <- function(name){
data <- read.delim(name, header = FALSE, sep = "\t", dec = ".")
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "nuis",i,".txt"))
write.table(x, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
}
splitfunc('bevel30_run03_rinse.txt')
######## TEST ################
#Read data into R.
data <- read.delim('bevel30_run03_rinse.txt', header = FALSE, sep = "\t", dec = ".")
view(data)
View(data)
print(data)
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "nuis",i,".txt"))
write.table(x, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
name='bevel30_run03'
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "nuis",i,".txt"))
write.table(x, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "nuis",i,".txt"))
write.table(x, append = FALSE, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y,append = FALSE, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "nuis",i,".txt"))
write.table(x, append = FALSE, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, append = FALSE, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write.table(x, append = FALSE, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, append = FALSE, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write(x, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write(y, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write(x, file = trialevfilename, sep = "\t")
write(y, file = nuisevfilename, sep = "\t")
}
######## TEST ################
#Read data into R.
data <- read.delim('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets/rinse_onsets/bevel30_run03_rinse.txt', header = FALSE, sep = "\t", dec = ".")
print(data)
'bevel30_run03.txt'
name='bevel30_run03'
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write(x, file = trialevfilename, sep = "\t")
write(y, file = nuisevfilename, sep = "\t")
}
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse', paste0(name, "_", "nuis",i,".txt"))
write.table(x, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
library(tidyselect)
setwd("/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets/rinse_onsets")
######## TEST LOOP ################
splitfunc <- function(name){
data <- read.delim(name, header = FALSE, sep = "\t", dec = ".")
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/rinse/', paste0(name, "_", "nuis",i,".txt"))
write.table(x, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
}
######## TEST GETTING FILENAMES ################
mypath <- '/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets/rinse_onsets/'
filelist <- list.files(mypath, all.files = TRUE)
lapply(filelist[1:358], splitfunc)
lapply(filelist[3:358], splitfunc)
print(filelist)
lapply(filelist[194:358], splitfunc)
lapply(filelist[197:358], splitfunc)
setwd("/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets/choice_onsets")
######## TEST LOOP ################
splitfunc <- function(name){
data <- read.delim(name, header = FALSE, sep = "\t", dec = ".")
for (i in 1:nrow(data)) {
x <- as.data.frame(data[i,], drop=false)
y <- as.data.frame(data[-i,], drop=false)
trialevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/choice/', paste0(name, "_", "trial",i,".txt"))
nuisevfilename <- file.path('/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets_reformatted/choice/', paste0(name, "_", "nuis",i,".txt"))
write.table(x, file = trialevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
write.table(y, file = nuisevfilename, sep = "\t", row.names = FALSE, col.names = FALSE)
}
}
######## TEST GETTING FILENAMES ################
mypath <- '/Users/jennygilbert/Documents/betaseries_bevel/1_level_1/onsets/choice_onsets/'
filelist <- list.files(mypath, all.files = TRUE)
print(filelist)
lapply(filelist[4:358], splitfunc)
